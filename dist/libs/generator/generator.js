Object.defineProperty(exports,"__esModule",{value:true});exports.generator=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _faker=require('../generator/faker');var _utils=require('../../utils');var _randomizer=require('./randomizer');var _nationalities=require('../../config/nationalities');var _positions=require('../../config/positions');var _modules=require('../../config/modules');var _teamDefinitions=require('../../config/teamDefinitions');var _helpers=require('../helpers');var PLAYER_AGE_RANGE=[15,41];var COACH_AGE_RANGE=[29,80];var SKILL_RANGE=[40,100];var generator={teamName:function teamName(){var nationality=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'it';return(0,_utils.format)(_randomizer.randomizer.pickOne(_teamDefinitions.teamNames),_faker.faker.city(nationality));},playerAge:function playerAge(){return _randomizer.randomizer.int(PLAYER_AGE_RANGE[0],PLAYER_AGE_RANGE[1]);},coachAge:function coachAge(){return _randomizer.randomizer.int(COACH_AGE_RANGE[0],COACH_AGE_RANGE[1]);},skill:function skill(){return _randomizer.randomizer.int(SKILL_RANGE[0],SKILL_RANGE[1]);},position:function position(){return _randomizer.randomizer.pickOne(_positions.positions);},module:function module(){return _randomizer.randomizer.pickOne(_modules.modules);},nationality:function nationality(){return _randomizer.randomizer.pickOne(_nationalities.nationalities);},status:function status(){return{morale:_randomizer.randomizer.int(10,100)};},statusModifiers:function statusModifiers(){return{decreases:[{chance:_randomizer.randomizer.int(10,90),value:_randomizer.randomizer.int(1,15)}],increases:[{chance:_randomizer.randomizer.int(10,90),value:_randomizer.randomizer.int(1,15)}]};},person:function person(locale){return{name:_faker.faker.name(locale),surname:_faker.faker.surname(locale),team:null,contract:_randomizer.randomizer.int(1,5)};},coach:function coach(){var forcedValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var locale=forcedValues.nationality||'it';var person=this.person(locale);var skill=this.skill();var age=this.coachAge();return _extends({},person,{status:this.status(),age:age,nationality:locale,skill:skill,module:this.module(),wage:_helpers.coachHelper.calculateWage({skill:skill,age:age})},forcedValues);},player:function player(){var forcedValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var locale=forcedValues.nationality||'it';var person=this.person(locale);var position=this.position();var age=this.playerAge();var skill=this.skill();var value=_helpers.playerHelper.calculateValue({position:position,skill:skill,age:age});return _extends({},person,{status:this.status(),age:age,nationality:locale,skill:skill,value:value,position:position,wage:_helpers.playerHelper.calculateWage({age:age,value:value})},forcedValues);},players:function players(){var _this=this;var number=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var forcedValues=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return(0,_utils.range)(number).map(function(_){return _this.player(forcedValues);});},team:function team(){var _this2=this;var forcedValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var rosterSize=_randomizer.randomizer.int(18,29);var name=this.teamName(nationality);var mostPlayers=Math.round(rosterSize*(1-0.8));var nationality=forcedValues.nationality||'it';var roster=this.players(mostPlayers,{nationality:nationality,team:name});roster.push(this.player({position:'GK',nationality:nationality,team:name}));(0,_utils.range)(rosterSize-mostPlayers).forEach(function(_){roster.push(_this2.player({nationality:_this2.nationality(),team:name}));});var coachNationality=_randomizer.randomizer.chance(90)?nationality:this.nationality();return{name:name,status:this.status(),nationality:nationality,finance:_randomizer.randomizer.int(1,100),coach:this.coach({nationality:coachNationality,team:name}),roster:roster};},teams:function teams(){var _this3=this;var number=arguments.length>0&&arguments[0]!==undefined?arguments[0]:8;var forcedValues=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return(0,_utils.range)(number).map(function(){return _this3.team(forcedValues);});}};exports.generator=generator;