Object.defineProperty(exports,"__esModule",{value:true});exports.leagueHelper=undefined;var _generator=require('../generator');var _playerHelper=require('./playerHelper');var _teamHelper=require('./teamHelper');var LOSER_MODIFIERS={decreases:[{chance:75,value:2}],increases:[{chance:10,value:4}]};var WINNER_MODIFIERS={increases:[{chance:80,value:7}],decreases:[{chance:20,value:3}]};var leagueHelper={parseRoundResults:function parseRoundResults(results,teamTable){results.forEach(function(r){if(!r.isDraw){var winnerRow=teamTable[r.winner];winnerRow.played+=1;winnerRow.points+=3;winnerRow.won+=1;winnerRow.goalsScored+=Math.max(r.homeGoal,r.awayGoal);winnerRow.goalsConceded+=Math.min(r.homeGoal,r.awayGoal);teamTable[r.winner]=winnerRow;var loserRow=teamTable[r.loser];loserRow.played+=1;loserRow.lost+=1;loserRow.goalsScored+=Math.min(r.homeGoal,r.awayGoal);loserRow.goalsConceded+=Math.max(r.homeGoal,r.awayGoal);teamTable[r.loser]=loserRow;}else{[r.winner,r.loser].forEach(function(team){var row=teamTable[team];row.played+=1;row.points+=1;row.draw+=1;row.goalsScored+=row.goalsScored+r.homeGoal;row.goalsConceded+=r.homeGoal;teamTable[team]=row;});}});return teamTable;},parseScorers:function parseScorers(results,oldScorers){results.forEach(function(r){var home=r.home,away=r.away,scorers=r.scorers;scorers.home.forEach(function(s){var playerKey=''+s.name+s.surname;if(oldScorers[playerKey]){oldScorers[playerKey].goals+=1;oldScorers[playerKey].team=home;}else{oldScorers[playerKey]={goals:1,team:home,player:s};}});scorers.away.forEach(function(s){var playerKey=''+s.name+s.surname;if(oldScorers[playerKey]){oldScorers[playerKey].goals+=1;oldScorers[playerKey].team=away;}else{oldScorers[playerKey]={goals:1,team:away,player:s};}});});return oldScorers;},updateStatus:function updateStatus(result,teams){result.forEach(function(r){var winnerModifiers=WINNER_MODIFIERS;var loserModifiers=LOSER_MODIFIERS;if(r.isDraw){winnerModifiers=_generator.generator.statusModifiers();loserModifiers=_generator.generator.statusModifiers();}teams[r.loser].roster=teams[r.loser].roster.map(function(p){return _playerHelper.playerHelper.updateStatus(p,loserModifiers);});teams[r.loser]=_teamHelper.teamHelper.updateStatus(teams[r.loser]);teams[r.winner].roster=teams[r.winner].roster.map(function(p){return _playerHelper.playerHelper.updateStatus(p,winnerModifiers);});teams[r.winner]=_teamHelper.teamHelper.updateStatus(teams[r.winner]);});return _teamHelper.teamHelper.objectToTeamArray(teams);}};exports.leagueHelper=leagueHelper;